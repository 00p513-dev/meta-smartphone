From 81960f66de45e2c39928afd370c2b89c5d339049 Mon Sep 17 00:00:00 2001
From: Martin Jansa <Martin.Jansa@gmail.com>
Date: Tue, 13 Mar 2012 08:45:48 +0100
Subject: [PATCH] adapt to newer elementary-1.0 APIs

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
---
 src/gui.c     |   36 ++++++++++++++++++------------------
 src/menu.c    |    6 +++---
 src/mokowin.c |   10 +++++-----
 3 files changed, 26 insertions(+), 26 deletions(-)

diff --git a/src/gui.c b/src/gui.c
index 3aa040c..10f4e1c 100644
--- a/src/gui.c
+++ b/src/gui.c
@@ -71,7 +71,7 @@ MokoPopupAlert* moko_popup_alert_new(MokoWin *parent, const char *label)
 
     // label
     p->label = elm_label_add(MOKO_INWIN(p)->inwin);
-    elm_label_label_set(p->label, label);
+    elm_object_text_set(p->label, label);
     elm_label_line_wrap_set(p->label, TRUE);
     //elm_label_wrap_width_set(p->label, 400);
 
@@ -85,14 +85,14 @@ MokoPopupAlert* moko_popup_alert_new(MokoWin *parent, const char *label)
     evas_object_size_hint_align_set(pad_frame, EVAS_HINT_FILL, EVAS_HINT_FILL);
 
     elm_object_style_set(pad_frame, "pad_medium");
-    elm_frame_content_set(pad_frame, p->label);
+    elm_object_content_set(pad_frame, p->label);
 
     evas_object_show(pad_frame);
     elm_box_pack_start(vbox, pad_frame);
 
     // pulsante OK
     p->ok_button = elm_button_add(MOKO_INWIN(p)->inwin);
-    elm_button_label_set(p->ok_button, _("OK"));
+    elm_object_text_set(p->ok_button, _("OK"));
     evas_object_smart_callback_add(p->ok_button, "clicked", _popup_alert_ok, p);
 
     evas_object_size_hint_weight_set(p->ok_button, EVAS_HINT_EXPAND, 0.0);
@@ -101,7 +101,7 @@ MokoPopupAlert* moko_popup_alert_new(MokoWin *parent, const char *label)
 
     elm_box_pack_end(vbox, p->ok_button);
 
-    elm_win_inwin_content_set(MOKO_INWIN(p)->inwin, vbox);
+    elm_object_content_set(MOKO_INWIN(p)->inwin, vbox);
 
     // supporto inners di mokowin
     mokowin_inner_add(p->parent, MOKO_INWIN(p));
@@ -115,7 +115,7 @@ MokoPopupAlert* moko_popup_alert_new(MokoWin *parent, const char *label)
 void moko_popup_status_activate(MokoPopupStatus *popup, const char *status)
 {
     if (status != NULL)
-        elm_label_label_set(popup->status, status);
+        elm_object_text_set(popup->status, status);
 
     mokoinwin_activate(MOKO_INWIN(popup));
 }
@@ -139,7 +139,7 @@ MokoPopupStatus* moko_popup_status_new(MokoWin *parent, const char *status)
     evas_object_size_hint_align_set(p->status, 0.5, -1.0);
     evas_object_show(p->status);
 
-    elm_win_inwin_content_set(MOKO_INWIN(p)->inwin, p->status);
+    elm_object_content_set(MOKO_INWIN(p)->inwin, p->status);
 
     // FIXME inners con azione
     //mokowin_inner_add(p->parent, MOKO_INWIN(p));
@@ -195,7 +195,7 @@ Evas_Object* moko_popup_menu_add(MokoPopupMenu* popup, const char *label, int in
     if (popup->style == MOKO_POPUP_CHECKS_OK || popup->style == MOKO_POPUP_CHECKS) {
 
         b = elm_radio_add(MOKO_INWIN(popup)->inwin);
-        elm_radio_label_set(b, label);
+        elm_object_text_set(b, label);
         elm_radio_state_value_set(b, index);
         if (popup->last)
             elm_radio_group_add(b, popup->last);
@@ -211,7 +211,7 @@ Evas_Object* moko_popup_menu_add(MokoPopupMenu* popup, const char *label, int in
     } else {
 
         b = elm_button_add(MOKO_INWIN(popup)->inwin);
-        elm_button_label_set(b, label);
+        elm_object_text_set(b, label);
 
         evas_object_smart_callback_add(b, "clicked", _menu_button_click, popup);
     }
@@ -251,7 +251,7 @@ MokoPopupMenu* moko_popup_menu_new(MokoWin *parent, const char *message, MokoPop
     // label
     if (message != NULL) {
         p->label = elm_label_add(MOKO_INWIN(p)->inwin);
-        elm_label_label_set(p->label, message);
+        elm_object_text_set(p->label, message);
         elm_label_line_wrap_set(p->label, TRUE);
 
         evas_object_size_hint_weight_set(p->label, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
@@ -262,7 +262,7 @@ MokoPopupMenu* moko_popup_menu_new(MokoWin *parent, const char *message, MokoPop
         evas_object_size_hint_weight_set(frame, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
         evas_object_size_hint_align_set(frame, 0.5, EVAS_HINT_FILL);
         elm_object_style_set(frame, "pad_medium");
-        elm_frame_content_set(frame, p->label);
+        elm_object_content_set(frame, p->label);
         evas_object_show(frame);
 
         elm_box_pack_start(gbox, frame);
@@ -284,13 +284,13 @@ MokoPopupMenu* moko_popup_menu_new(MokoWin *parent, const char *message, MokoPop
     evas_object_size_hint_align_set(p->vbox, EVAS_HINT_FILL, EVAS_HINT_FILL);
     evas_object_show(p->vbox);
 
-    elm_scroller_content_set(scroll, p->vbox);
+    elm_object_content_set(scroll, p->vbox);
     elm_box_pack_end(gbox, scroll);
 
     if (style == MOKO_POPUP_CHECKS_OK) {
         // aggiungi pulsante ok alla fine
         Evas_Object* btn_ok = elm_button_add(MOKO_INWIN(p)->inwin);
-        elm_button_label_set(btn_ok, _("OK"));
+        elm_object_text_set(btn_ok, _("OK"));
         evas_object_size_hint_weight_set(btn_ok, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
         evas_object_size_hint_align_set(btn_ok, EVAS_HINT_FILL, EVAS_HINT_FILL);
 
@@ -306,7 +306,7 @@ MokoPopupMenu* moko_popup_menu_new(MokoWin *parent, const char *message, MokoPop
     // supporto inners di mokowin
     mokowin_inner_add(p->parent, MOKO_INWIN(p));
 
-    elm_win_inwin_content_set(MOKO_INWIN(p)->inwin, gbox);
+    elm_object_content_set(MOKO_INWIN(p)->inwin, gbox);
 
     return p;
 }
@@ -390,14 +390,14 @@ MokoPopupSlider* moko_popup_slider_new(MokoWin *parent, const char *message, int
     evas_object_size_hint_weight_set(frame, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
     evas_object_size_hint_align_set(frame, EVAS_HINT_FILL, EVAS_HINT_FILL);
     elm_object_style_set(frame, "pad_medium");
-    elm_frame_content_set(frame, frame_vbox);
+    elm_object_content_set(frame, frame_vbox);
     evas_object_show(frame);
 
     elm_box_pack_start(p->vbox, frame);
 
     // label
     p->label = elm_label_add(MOKO_INWIN(p)->inwin);
-    elm_label_label_set(p->label, message);
+    elm_object_text_set(p->label, message);
     elm_label_line_wrap_set(p->label, TRUE);
 
     evas_object_size_hint_weight_set(p->label, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
@@ -427,7 +427,7 @@ MokoPopupSlider* moko_popup_slider_new(MokoWin *parent, const char *message, int
 
     // pulsante OK
     Evas_Object *b = elm_button_add(MOKO_INWIN(p)->inwin);
-    elm_button_label_set(b, _("OK"));
+    elm_object_text_set(b, _("OK"));
     evas_object_size_hint_weight_set(b, EVAS_HINT_EXPAND, 0.0);
     evas_object_size_hint_align_set(b, EVAS_HINT_FILL, 0.0);
 
@@ -438,7 +438,7 @@ MokoPopupSlider* moko_popup_slider_new(MokoWin *parent, const char *message, int
 
     // pulsante Annulla
     b = elm_button_add(MOKO_INWIN(p)->inwin);
-    elm_button_label_set(b, _("Cancel"));
+    elm_object_text_set(b, _("Cancel"));
     evas_object_size_hint_weight_set(b, EVAS_HINT_EXPAND, 0.0);
     evas_object_size_hint_align_set(b, EVAS_HINT_FILL, 0.0);
 
@@ -453,7 +453,7 @@ MokoPopupSlider* moko_popup_slider_new(MokoWin *parent, const char *message, int
     // supporto inners di mokowin
     mokowin_inner_add(p->parent, MOKO_INWIN(p));
 
-    elm_win_inwin_content_set(MOKO_INWIN(p)->inwin, p->vbox);
+    elm_object_content_set(MOKO_INWIN(p)->inwin, p->vbox);
 
     return p;
 }
diff --git a/src/menu.c b/src/menu.c
index cd9ac04..f19e014 100644
--- a/src/menu.c
+++ b/src/menu.c
@@ -52,7 +52,7 @@ static void _new_game(void *data, Evas_Object* obj, void* event)
 static Evas_Object* add_menu_button(Evas_Object* box, const char* title, Evas_Smart_Cb callback, const void* data)
 {
     Evas_Object* button = elm_button_add(win->win);
-    elm_button_label_set(button, title);
+    elm_object_text_set(button, title);
     evas_object_smart_callback_add(button, "clicked", callback, data);
 
     evas_object_size_hint_weight_set(button, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
@@ -82,10 +82,10 @@ static void create_win(void)
 
     // title
     Evas_Object* title = elm_label_add(win->win);
-    elm_label_label_set(title, PACKAGE_NAME);
+    elm_object_text_set(title, PACKAGE_NAME);
     evas_object_size_hint_weight_set(title, EVAS_HINT_EXPAND, 0.0);
     evas_object_size_hint_align_set(title, 0.5, 0.0);
-    elm_frame_content_set(fr, title);
+    elm_object_content_set(fr, title);
     evas_object_show(title);
 
     // buttons box
diff --git a/src/mokowin.c b/src/mokowin.c
index f6654cd..fd3ba87 100644
--- a/src/mokowin.c
+++ b/src/mokowin.c
@@ -120,7 +120,7 @@ static void _key_up(void *mokowin, Evas *e, Evas_Object *obj, void *event_info)
 Evas_Object* mokowin_menu_hover_button(MokoWin* mw, Evas_Object* table, const char* label, int x, int y, int w, int h)
 {
     Evas_Object *bt = elm_button_add(mw->win);
-    elm_button_label_set(bt, label);
+    elm_object_text_set(bt, label);
 
     evas_object_size_hint_weight_set(bt, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
     evas_object_size_hint_align_set(bt, EVAS_HINT_FILL, EVAS_HINT_FILL);
@@ -134,7 +134,7 @@ Evas_Object* mokowin_menu_hover_button(MokoWin* mw, Evas_Object* table, const ch
 Evas_Object* mokowin_vbox_button(MokoWin* mw, const char* label, Evas_Object* after, Evas_Object* before)
 {
     Evas_Object *bt = elm_button_add(mw->win);
-    elm_button_label_set(bt, label);
+    elm_object_text_set(bt, label);
 
     evas_object_size_hint_weight_set(bt, EVAS_HINT_EXPAND, EVAS_HINT_EXPAND);
     evas_object_size_hint_align_set(bt, EVAS_HINT_FILL, EVAS_HINT_FILL);
@@ -214,7 +214,7 @@ void mokowin_menu_enable(MokoWin *mw)
             elm_box_pack_end(mw->scroller_vbox, mw->menu_hover);
 
         if (mw->layout != NULL)
-            elm_layout_content_set(mw->layout, "menu_hover", mw->menu_hover);
+            elm_object_part_content_set(mw->layout, "menu_hover", mw->menu_hover);
     }
 }
 
@@ -239,7 +239,7 @@ void mokowin_menu_set(MokoWin *mw, Evas_Object *box)
         evas_object_show(box);
 
         mw->current_menu = box;
-        elm_hover_content_set(mw->menu_hover, "top", box);
+        elm_object_part_content_set(mw->menu_hover, "top", box);
 
         mw->menu_enable = TRUE;
     }
@@ -294,7 +294,7 @@ void mokowin_create_vbox(MokoWin *mw, bool scroller)
         evas_object_show(mw->scroller);
 
         //elm_win_resize_object_add(mw->win, mw->scroller);
-        elm_scroller_content_set(mw->scroller, mw->vbox);
+        elm_object_content_set(mw->scroller, mw->vbox);
 
         // vbox per contenere il menu_hover (TODO aggiungere solo se si abilita il menu_hover)
         mw->scroller_vbox = elm_box_add(mw->win);
-- 
1.7.8.5

