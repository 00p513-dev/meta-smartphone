diff --git a/ffphonelog.vala b/ffphonelog.vala
index bfd1412..da5df6a 100644
--- a/ffphonelog.vala
+++ b/ffphonelog.vala
@@ -298,7 +298,7 @@ class CallsList
 	itc.item_style = "double_label";
 	// XXX could libeflvala be fixed to avoid these casts
 	itc.func.label_get = (GenlistItemLabelGetFunc) get_label;
-	itc.func.icon_get = (GenlistItemIconGetFunc) get_icon;
+	itc.func.content_get = (GenlistItemContentGetFunc) get_content;
 	lst.smart_callback_add("expand,request", expand);
 	lst.smart_callback_add("contract,request", contract);
 	for (int i = 0; i < mode_items.length; i++) {
@@ -321,7 +321,7 @@ class CallsList
 	for (unowned CallItem subitem =
 		 ((CallItem) it->data_get()).next_subitem;
 	     subitem != null; subitem = subitem.next_subitem) {
-	    lst.item_append(itc, subitem, it, GenlistItemFlags.NONE, null);
+	    lst.item_append(ref itc, subitem, it, GenlistItemFlags.NONE, null);
 	}
     }
     void contract(Evas.Object obj, void *event_info)
@@ -425,10 +425,10 @@ class CallsList
     void append_item(CallItem item)
     {
 	if (item.subitems > 0)
-	    lst.item_append(itc, item, null,
+	    lst.item_append(ref itc, item, null,
 			    GenlistItemFlags.SUBITEMS, null);
 	else
-	    lst.item_append(itc, item, null,
+	    lst.item_append(ref itc, item, null,
 			    GenlistItemFlags.NONE, null);
     }
 
@@ -437,7 +437,7 @@ class CallsList
 	return ((CallItem) data).get_label(part);
     }
 
-    static Elm.Object? get_icon(void *data, Elm.Object? obj, string? part)
+    static Elm.Object? get_content(void *data, Elm.Object? obj, string? part)
     {
 	CallItem *item = ((CallItem) data);
 	if ((item->mode_items.list.cur_mode != Mode.ALL && !item->is_new) ||
