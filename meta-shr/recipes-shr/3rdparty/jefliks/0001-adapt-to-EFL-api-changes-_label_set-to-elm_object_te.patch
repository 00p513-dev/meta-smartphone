From 70764601ece5f1e4b76f36ba0f0bad8b4bd65d5d Mon Sep 17 00:00:00 2001
From: Martin Jansa <Martin.Jansa@gmail.com>
Date: Thu, 26 Jan 2012 17:18:00 +0100
Subject: [PATCH 01/11] adapt to EFL api changes: *_label_set to
 elm_object_text_set

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
---
 ui_about.c  |    4 ++--
 ui_chat.c   |   30 +++++++++++++++---------------
 ui_config.c |   24 ++++++++++++------------
 ui_main.c   |   16 ++++++++--------
 4 files changed, 37 insertions(+), 37 deletions(-)

diff --git a/ui_about.c b/ui_about.c
index 7f6f5ae..d7e3d68 100644
--- a/ui_about.c
+++ b/ui_about.c
@@ -66,7 +66,7 @@ Evas_Object *elm_jabber_about_add(Evas_Object *parent){
   
   /* About Text */
   text = elm_anchorview_add(box);
-  elm_anchorview_text_set(text, ABOUT_CONTENT);
+  elm_object_text_set(text, ABOUT_CONTENT);
   evas_object_size_hint_weight_set(text, 1.0, 1.0);
   evas_object_size_hint_align_set(text, -1.0, -1.0);
   elm_box_pack_end(box, text);
@@ -74,7 +74,7 @@ Evas_Object *elm_jabber_about_add(Evas_Object *parent){
   
   /* Close Button */
   close = elm_button_add(box);
-  elm_button_label_set(close, _("Close"));
+  elm_object_text_set(close, _("Close"));
   elm_box_pack_end(box, close);
   evas_object_show(close);
   
diff --git a/ui_chat.c b/ui_chat.c
index a03c953..0db1004 100644
--- a/ui_chat.c
+++ b/ui_chat.c
@@ -73,23 +73,23 @@ static void inst_cin(Widget_Data *wd, Eina_Bool st){
   if(sr){
     evas_object_hide(chat->input);
     elm_box_unpack(chat->box, chat->input);
-    elm_button_label_set(wd->write_send, _("Write"));
-    elm_button_label_set(wd->end_cancel, _("End"));
+    elm_object_text_set(wd->write_send, _("Write"));
+    elm_object_text_set(wd->end_cancel, _("End"));
   }else{
     elm_box_pack_end(chat->box, chat->input);
     evas_object_show(chat->input);
-    elm_button_label_set(wd->write_send, _("Send"));
-    elm_button_label_set(wd->end_cancel, _("Cancel"));
+    elm_object_text_set(wd->write_send, _("Send"));
+    elm_object_text_set(wd->end_cancel, _("Cancel"));
   }
 }
 
 static void inst_sel(Widget_Data *wd, Chat_Inst *chat){
   if(chat){
     elm_pager_content_promote(wd->pager, chat->box);
-    elm_hoversel_label_set(wd->chats, chat->jid);
+    elm_object_text_set(wd->chats, chat->jid);
   }else{
     elm_pager_content_promote(wd->pager, wd->empty);
-    elm_hoversel_label_set(wd->chats, _("Chats"));
+    elm_object_text_set(wd->chats, _("Chats"));
   }
   if(wd->cinst!=chat) inst_cin(wd, 0); // hide input
   wd->cinst=chat;
@@ -210,7 +210,7 @@ static void inst_add(Chat_Inst *chat, const char* text, char dir /* 0 - in, 1 -
   
   repl=elm_bubble_add(chat->que);
   elm_object_scale_set(repl, 0.8);
-  elm_bubble_label_set(repl, dir?"you":chat->jid);
+  elm_object_text_set(repl, dir?"you":chat->jid);
   if(!dir){
     photo = elm_jabber_photo_add(repl, chat->jid);
     if(photo) elm_bubble_icon_set(repl, photo);
@@ -226,7 +226,7 @@ static void inst_add(Chat_Inst *chat, const char* text, char dir /* 0 - in, 1 -
     if(!localtime_r(&now, &t))break;
     if(!strftime(buf, sizeof(buf), default_timefmt, &t))break;
     
-    elm_bubble_info_set(repl, buf);
+    elm_object_part_text_set(repl, "info", buf);
   }
   
   evas_object_size_hint_weight_set(repl, EVAS_HINT_EXPAND, 0.0);
@@ -328,7 +328,7 @@ _end_cancel_hook(void *data, Evas_Object *obj, void *event_info){
     inst_cin(wd, 0); // hide input
   }else{
     /* end chat */
-    const char *jid=elm_hoversel_label_get(wd->chats);
+    const char *jid=elm_object_text_get(wd->chats);
     inst_del(wd, jid);
   }
 }
@@ -368,7 +368,7 @@ Evas_Object *elm_jabber_chat_add(Evas_Object * parent){
   chats = elm_hoversel_add(parent);
   wd->chats=chats;
   elm_object_scale_set(chats, 0.9);
-  elm_hoversel_label_set(chats, _("Chats"));
+  elm_object_text_set(chats, _("Chats"));
   elm_hoversel_hover_parent_set(chats, box);
   evas_object_size_hint_weight_set(chats, EVAS_HINT_EXPAND, 0.0);
   evas_object_size_hint_align_set(chats, EVAS_HINT_FILL, 0.0);
@@ -378,13 +378,13 @@ Evas_Object *elm_jabber_chat_add(Evas_Object * parent){
   /* Empty Label */
   empty_label = elm_label_add(parent);
   wd->empty_label = empty_label;
-  elm_label_label_set(empty_label, _("No opened chats here."));
+  elm_object_text_set(empty_label, _("No opened chats here."));
   evas_object_show(empty_label);
   
   /* Empty Frame */
   empty = elm_frame_add(parent);
   wd->empty = empty;
-  elm_frame_label_set(empty, "Empty");
+  elm_object_text_set(empty, "Empty");
   evas_object_size_hint_weight_set(empty, 1.0, 1.0);
   evas_object_size_hint_align_set(empty, -1.0, -1.0);
   elm_frame_content_set(empty, empty_label);
@@ -413,7 +413,7 @@ Evas_Object *elm_jabber_chat_add(Evas_Object * parent){
   
   /* Actions */
   actions = elm_hoversel_add(parent);
-  elm_hoversel_label_set(actions, _("Actions"));
+  elm_object_text_set(actions, _("Actions"));
   elm_hoversel_hover_parent_set(actions, box);
   evas_object_size_hint_weight_set(actions, 1.0, 0.0);
   evas_object_size_hint_align_set(actions, -1.0, 0.0);
@@ -426,7 +426,7 @@ Evas_Object *elm_jabber_chat_add(Evas_Object * parent){
   /* Write/Send Button */
   write_send = elm_button_add(parent);
   wd->write_send = write_send;
-  elm_button_label_set(write_send, _("Write"));
+  elm_object_text_set(write_send, _("Write"));
   //elm_button_autorepeat_set(write_send, 0);
   evas_object_smart_callback_add(write_send, "clicked", _write_send_hook, wd);
   evas_object_size_hint_weight_set(write_send, 1.0, 0.0);
@@ -437,7 +437,7 @@ Evas_Object *elm_jabber_chat_add(Evas_Object * parent){
   /* Close/Cancel Button */
   end_cancel = elm_button_add(parent);
   wd->end_cancel = end_cancel;
-  elm_button_label_set(end_cancel, _("End"));
+  elm_object_text_set(end_cancel, _("End"));
   //elm_button_autorepeat_set(end_cancel, 0);
   evas_object_smart_callback_add(end_cancel, "clicked", _end_cancel_hook, wd);
   evas_object_size_hint_weight_set(end_cancel, 1.0, 0.0);
diff --git a/ui_config.c b/ui_config.c
index 96f418d..f4245e4 100644
--- a/ui_config.c
+++ b/ui_config.c
@@ -163,7 +163,7 @@ Evas_Object *elm_jabber_config_add(Evas_Object *parent){
 #define WRAP_FIELD(title, widget) {					\
     Evas_Object *field;							\
     field = elm_frame_add(box);						\
-    elm_frame_label_set(field, title);					\
+    elm_object_text_set(field, title);					\
     evas_object_size_hint_weight_set(field, 1.0, 0.0);			\
     evas_object_size_hint_align_set(field, -1.0, 0.0);			\
     elm_box_pack_end(box, field);					\
@@ -184,7 +184,7 @@ Evas_Object *elm_jabber_config_add(Evas_Object *parent){
     evas_object_size_hint_align_set(hbox, -1.0, 0.0);			\
     elm_box_pack_end(box, hbox);					\
     label = elm_label_add(box);						\
-    elm_label_label_set(label, title);					\
+    elm_object_text_set(label, title);					\
     evas_object_size_hint_weight_set(label, 1.0, 0.0);			\
     evas_object_size_hint_align_set(label, -1.0, 0.0);			\
     elm_box_pack_end(hbox, label);					\
@@ -223,7 +223,7 @@ Evas_Object *elm_jabber_config_add(Evas_Object *parent){
   }
   
   wd->server_enable = elm_check_add(box);
-  elm_check_label_set(wd->server_enable, "");
+  elm_object_text_set(wd->server_enable, "");
   evas_object_size_hint_weight_set(wd->server_enable, 0.0, 0.0);
   evas_object_size_hint_align_set(wd->server_enable, 0.0, 0.0);
   evas_object_show(wd->server_enable);
@@ -247,28 +247,28 @@ Evas_Object *elm_jabber_config_add(Evas_Object *parent){
   
   /* Use TLS */
   wd->usetls = elm_check_add(box);
-  elm_check_label_set(wd->usetls, _("Use TLS"));
+  elm_object_text_set(wd->usetls, _("Use TLS"));
   evas_object_size_hint_align_set(wd->usetls, -1.0, 0.0);
   elm_table_pack(tab, wd->usetls, 0, 0, 1, 1);
   evas_object_show(wd->usetls);
   
   /* Use PLAIN */
   wd->plain = elm_check_add(box);
-  elm_check_label_set(wd->plain, _("Use PLAIN"));
+  elm_object_text_set(wd->plain, _("Use PLAIN"));
   evas_object_size_hint_align_set(wd->plain, -1.0, 0.0);
   elm_table_pack(tab, wd->plain, 1, 0, 1, 1);
   evas_object_show(wd->plain);
   
   /* Use SASL */
   wd->sasl = elm_check_add(box);
-  elm_check_label_set(wd->sasl, _("Use SASL"));
+  elm_object_text_set(wd->sasl, _("Use SASL"));
   evas_object_size_hint_align_set(wd->sasl, -1.0, 0.0);
   elm_table_pack(tab, wd->sasl, 0, 1, 1, 1);
   evas_object_show(wd->sasl);
   
   /* SASL Anonymous */
   wd->anon = elm_check_add(box);
-  elm_check_label_set(wd->anon, _("Anonymous"));
+  elm_object_text_set(wd->anon, _("Anonymous"));
   evas_object_size_hint_align_set(wd->anon, -1.0, 0.0);
   elm_table_pack(tab, wd->anon, 1, 1, 1, 1);
   evas_object_show(wd->anon);
@@ -285,19 +285,19 @@ Evas_Object *elm_jabber_config_add(Evas_Object *parent){
     evas_object_show(tab);
     
     wd->hide_unaval = elm_check_add(box);
-    elm_check_label_set(wd->hide_unaval, _("Hide unavailable"));
+    elm_object_text_set(wd->hide_unaval, _("Hide unavailable"));
     evas_object_size_hint_align_set(wd->hide_unaval, -1.0, 0.0);
     elm_table_pack(tab, wd->hide_unaval, 0, 0, 1, 1);
     evas_object_show(wd->hide_unaval);
     
     wd->hide_server = elm_check_add(box);
-    elm_check_label_set(wd->hide_server, _("Hide server part"));
+    elm_object_text_set(wd->hide_server, _("Hide server part"));
     evas_object_size_hint_align_set(wd->hide_server, -1.0, 0.0);
     elm_table_pack(tab, wd->hide_server, 1, 0, 1, 1);
     evas_object_show(wd->hide_server);
     
     wd->hide_photos = elm_check_add(box);
-    elm_check_label_set(wd->hide_photos, _("Hide user's photos"));
+    elm_object_text_set(wd->hide_photos, _("Hide user's photos"));
     evas_object_size_hint_align_set(wd->hide_photos, -1.0, 0.0);
     elm_table_pack(tab, wd->hide_photos, 0, 1, 1, 1);
     evas_object_show(wd->hide_photos);
@@ -316,7 +316,7 @@ Evas_Object *elm_jabber_config_add(Evas_Object *parent){
   wd->save = elm_button_add(buttons);
   evas_object_size_hint_weight_set(wd->save, 1.0, 1.0);
   evas_object_size_hint_align_set(wd->save, -1.0, 0.0);
-  elm_button_label_set(wd->save, _("Save"));
+  elm_object_text_set(wd->save, _("Save"));
   elm_box_pack_end(buttons, wd->save);
   evas_object_show(wd->save);
   evas_object_smart_callback_add(wd->save, "clicked", _save_hook, wd);
@@ -324,7 +324,7 @@ Evas_Object *elm_jabber_config_add(Evas_Object *parent){
   close = elm_button_add(buttons);
   evas_object_size_hint_weight_set(close, 1.0, 1.0);
   evas_object_size_hint_align_set(close, -1.0, 0.0);
-  elm_button_label_set(close, _("Close"));
+  elm_object_text_set(close, _("Close"));
   elm_box_pack_end(buttons, close);
   evas_object_show(close);
   evas_object_smart_callback_add(close, "clicked", _close_hook, wd);
diff --git a/ui_main.c b/ui_main.c
index d07a567..cea49b0 100644
--- a/ui_main.c
+++ b/ui_main.c
@@ -181,7 +181,7 @@ _status_hook(void *data, Evas_Object *obj, void *event_info){
   Widget_Data *wd=data;
   Elm_Hoversel_Item* item=event_info;
   
-  wd->selected_status=status_by_title(elm_hoversel_item_label_get(item));
+  wd->selected_status=status_by_title(elm_object_item_text_get(item));
   
   if(wd->selected_status==JABBER_OFFLINE){
     if(jabber_state(wd->jabber)!=JABBER_DISCONNECTED){
@@ -191,7 +191,7 @@ _status_hook(void *data, Evas_Object *obj, void *event_info){
   }else{
     jabber_status_set(wd->jabber, wd->selected_status, _("I'm Jefliks! (Experimental Jabber Client for Handheld devices, based on Enlightenment) http://sourceforge.net/projects/jefliks/"));
     if(jabber_state(wd->jabber)==JABBER_CONNECTED){
-      elm_hoversel_label_set(wd->status, title_by_status(wd->selected_status));
+      elm_object_text_set(wd->status, title_by_status(wd->selected_status));
     }else{
       jabber_connect(wd->jabber);
     }
@@ -222,7 +222,7 @@ _state_change_job(void *data){
     title=title_by_status(wd->selected_status);
     break;
   }
-  elm_hoversel_label_set(wd->status, title);
+  elm_object_text_set(wd->status, title);
   
   free(as);
 }
@@ -303,12 +303,12 @@ _error_notify_job(void *data){
   evas_object_show(box);
   
   text = elm_label_add(wd->parent);
-  elm_label_label_set(text, message);
+  elm_object_text_set(text, message);
   elm_box_pack_end(box, text);
   evas_object_show(text);
   
   close = elm_button_add(wd->parent);
-  elm_button_label_set(close, _("Close"));
+  elm_object_text_set(close, _("Close"));
   evas_object_smart_callback_add(close, "clicked", _error_notify_close, notify);
   elm_box_pack_end(box, close);
   evas_object_show(close);
@@ -379,7 +379,7 @@ Evas_Object *elm_jabber_main(Evas_Object *parent){
   /* Status */
   status = elm_hoversel_add(parent);
   wd->status=status;
-  elm_hoversel_label_set(status, _("Status"));
+  elm_object_text_set(status, _("Status"));
   elm_hoversel_hover_parent_set(status, box);
   evas_object_size_hint_weight_set(status, 1.0, 1.0);
   evas_object_size_hint_align_set(status, -1.0, 0.0);
@@ -396,7 +396,7 @@ Evas_Object *elm_jabber_main(Evas_Object *parent){
   
   /* Talks */
   talks = elm_hoversel_add(parent);
-  elm_hoversel_label_set(talks, _("Talks"));
+  elm_object_text_set(talks, _("Talks"));
   elm_hoversel_hover_parent_set(talks, box);
   evas_object_size_hint_weight_set(talks, 1.0, 1.0);
   evas_object_size_hint_align_set(talks, -1.0, 0.0);
@@ -409,7 +409,7 @@ Evas_Object *elm_jabber_main(Evas_Object *parent){
   
   /* Actions */
   actions = elm_hoversel_add(parent);
-  elm_hoversel_label_set(actions, _("Actions"));
+  elm_object_text_set(actions, _("Actions"));
   elm_hoversel_hover_parent_set(actions, box);
   evas_object_size_hint_weight_set(actions, 1.0, 1.0);
   evas_object_size_hint_align_set(actions, -1.0, 0.0);
-- 
1.7.8.4

