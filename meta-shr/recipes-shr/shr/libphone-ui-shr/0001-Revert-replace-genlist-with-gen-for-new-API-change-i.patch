From 52ae61ca1cd16325a54d8ab09d69cf079ff92729 Mon Sep 17 00:00:00 2001
From: Martin Jansa <Martin.Jansa@gmail.com>
Date: Thu, 1 Dec 2011 21:44:57 +0100
Subject: [PATCH] Revert "replace genlist with gen for new API change in
 r64245"

* current goal of upstream is to merge gengrid to genlist and remove
  newly added gen API

This reverts commit 79378ea82b96ced4f806891e04d2d31405ed5e1b.

Signed-off-by: Martin Jansa <Martin.Jansa@gmail.com>
---
 src/view/contact-list-common.c |    8 ++++----
 src/view/contact-list-view.c   |    8 ++++----
 src/view/contact-view.c        |    2 +-
 src/view/message-list-view.c   |   26 +++++++++++++-------------
 src/view/sim-manager-view.c    |   12 ++++++------
 5 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/src/view/contact-list-common.c b/src/view/contact-list-common.c
index a981fc7..976e434 100644
--- a/src/view/contact-list-common.c
+++ b/src/view/contact-list-common.c
@@ -151,12 +151,12 @@ contact_list_item_add(struct ContactListData *list_data,
 
 	if (sortin) {
 		/* find the correct position to insert the new one */
-		it = elm_gen_first_item_get(list_data->list);
+		it = elm_genlist_first_item_get(list_data->list);
 		while (it) {
 			other = (GHashTable *)elm_genlist_item_data_get(it);
 			if (phoneui_utils_contact_compare(entry, other) < 0)
 				break;
-			it = elm_gen_item_next_get(it);
+			it = elm_genlist_item_next_get(it);
 		}
 		if (it) {
 			return elm_genlist_item_insert_before(list_data->list,
@@ -199,7 +199,7 @@ contact_list_fill_index(struct ContactListData *list_data)
 	limit = height / index_button_height;
 	init_index_count = list_data->count / (limit - 1); /* The number of indexes excluding the first */
 	index_count = 0; /* Add the first as well */
-	it = elm_gen_first_item_get(list_data->list);
+	it = elm_genlist_first_item_get(list_data->list);
 	while (it) {
 		entry = (GHashTable *)elm_genlist_item_data_get(it);
 		name = phoneui_utils_contact_display_name_get(entry);
@@ -226,7 +226,7 @@ contact_list_fill_index(struct ContactListData *list_data)
 			}
 			index_count--;
 		}
-		it = elm_gen_item_next_get(it);
+		it = elm_genlist_item_next_get(it);
 	}
 	if (list_data->layout) {
 		elm_object_part_content_set(list_data->layout, "contacts_index",
diff --git a/src/view/contact-list-view.c b/src/view/contact-list-view.c
index 5df2d14..c0a6e9b 100644
--- a/src/view/contact-list-view.c
+++ b/src/view/contact-list-view.c
@@ -378,7 +378,7 @@ _list_unselect_clicked(void *data, Evas_Object * obj, void *event_info)
 		return;
 
 	EINA_LIST_FOREACH(contacts, c, contact)
-		elm_gen_item_selected_set(contact, EINA_FALSE);
+		elm_genlist_item_selected_set(contact, EINA_FALSE);
 }
 
 static void
@@ -418,7 +418,7 @@ _remove_contact(const char *path)
 	GVariant *tmp;
 
 	g_debug("Removing contact %s from list", path);
-	it = elm_gen_first_item_get(view.list_data.list);
+	it = elm_genlist_first_item_get(view.list_data.list);
 	while (it) {
 		properties = (GHashTable *)elm_genlist_item_data_get(it);
 		tmp = g_hash_table_lookup(properties, "Path");
@@ -429,7 +429,7 @@ _remove_contact(const char *path)
 				break;
 			}
 		}
-		it = elm_gen_item_next_get(it);
+		it = elm_genlist_item_next_get(it);
 	}
 }
 
@@ -457,7 +457,7 @@ _contact_changed_cb(void *data, const char *path, enum PhoneuiInfoChangeType typ
 static void
 _hide_cb(struct View *view)
 {
-	elm_genlist_item_bring_in(elm_gen_first_item_get(
+	elm_genlist_item_bring_in(elm_genlist_first_item_get(
 		((struct ContactListViewData *)view)->list_data.list));
 }
 
diff --git a/src/view/contact-view.c b/src/view/contact-view.c
index bf28c43..d95e20c 100644
--- a/src/view/contact-view.c
+++ b/src/view/contact-view.c
@@ -1005,7 +1005,7 @@ _load_fields(struct ContactViewData *view)
 
 	common_utils_debug_dump_hashtable(view->properties);
 
-	elm_gen_clear(view->fields);
+	elm_genlist_clear(view->fields);
 	if (view->properties) {
 		g_hash_table_iter_init(&iter, view->properties);
 		while (g_hash_table_iter_next(&iter, &_key, &_val)) {
diff --git a/src/view/message-list-view.c b/src/view/message-list-view.c
index 647e95a..0633a45 100644
--- a/src/view/message-list-view.c
+++ b/src/view/message-list-view.c
@@ -457,7 +457,7 @@ static void _scroll_bottom(void *_data, Evas_Object * obj, void *event_info)
 	edje_object_signal_emit(ui_utils_view_layout_get(VIEW_PTR(view)),
 				"start_bottom_loading","");
 
-	view.latest_it = elm_gen_last_item_get(view.list);
+	view.latest_it = elm_genlist_last_item_get(view.list);
 	phoneui_utils_messages_get_full("Timestamp", TRUE, view.msg_end, MSG_PER_UPDATE, TRUE, NULL, _process_messages, GINT_TO_POINTER(LIST_INSERT_APPEND));
 }
 
@@ -478,7 +478,7 @@ static void _scroll_top(void *_data, Evas_Object * obj, void *event_info)
 
 	unsigned int start = view.msg_start > MSG_PER_UPDATE ? view.msg_start-MSG_PER_UPDATE : 0;
 
-	view.latest_it = elm_gen_first_item_get(view.list);
+	view.latest_it = elm_genlist_first_item_get(view.list);
 	phoneui_utils_messages_get_full("Timestamp", TRUE, start, MSG_PER_UPDATE, TRUE, NULL, _process_messages, GINT_TO_POINTER(LIST_INSERT_SORTED));
 }
 
@@ -637,7 +637,7 @@ _process_message_get(GError *error, GHashTable *message, gpointer data)
 		new_timestamp = (long) g_variant_get_int32(tmp);
 	}
 
-	it = elm_gen_first_item_get(view.list);
+	it = elm_genlist_first_item_get(view.list);
 	if (it) {
 		it_data = elm_genlist_item_data_get(it);
 		if (it_data && (tmp = g_hash_table_lookup(it_data, "Timestamp"))) {
@@ -645,7 +645,7 @@ _process_message_get(GError *error, GHashTable *message, gpointer data)
 		}
 	}
 
-	it = elm_gen_last_item_get(view.list);
+	it = elm_genlist_last_item_get(view.list);
 	if (it) {
 		it_data = elm_genlist_item_data_get(it);
 		if (it_data && (tmp = g_hash_table_lookup(it_data, "Timestamp"))) {
@@ -723,7 +723,7 @@ _process_message(gpointer _message, gpointer _data)
 	}
 
 	if (insert_mode == LIST_INSERT_SORTED) {
-		it = elm_gen_first_item_get(view.list);
+		it = elm_genlist_first_item_get(view.list);
 		while (it) {
 			other = (GHashTable *)elm_genlist_item_data_get(it);
 			tmp = g_hash_table_lookup(other, "Timestamp");
@@ -733,12 +733,12 @@ _process_message(gpointer _message, gpointer _data)
 			}
 			if (timestamp > other_timestamp)
 				break;
-			it = elm_gen_item_next_get(it);
+			it = elm_genlist_item_next_get(it);
 		}
 		if (it) {
-			if (it == elm_gen_first_item_get(view.list))
+			if (it == elm_genlist_first_item_get(view.list))
 				insert_mode = LIST_INSERT_PREPEND;
-			else if (it == elm_gen_last_item_get(view.list))
+			else if (it == elm_genlist_last_item_get(view.list))
 				insert_mode = LIST_INSERT_APPEND;
 
 			it = elm_genlist_item_insert_before(view.list, &itc,
@@ -787,10 +787,10 @@ _process_message(gpointer _message, gpointer _data)
 
 	if ((view.msg_end - view.msg_start) > MSG_PAGE_SIZE) {
 		if (insert_mode == LIST_INSERT_APPEND) {
-			it = elm_gen_first_item_get(view.list);
+			it = elm_genlist_first_item_get(view.list);
 			view.msg_start++;
 		} else {
-			it = elm_gen_last_item_get(view.list);
+			it = elm_genlist_last_item_get(view.list);
 			view.msg_start = view.msg_start > 1 ? view.msg_start-1 : 0;
 			view.msg_end = view.msg_end > 2 ? view.msg_end-2 : 0;
 		}
@@ -956,7 +956,7 @@ _remove_message(const char *path)
 	GVariant *tmp;
 
 	g_debug("Removing message %s from list", path);
-	it = elm_gen_first_item_get(view.list);
+	it = elm_genlist_first_item_get(view.list);
 	while (it) {
 		properties = (GHashTable *)elm_genlist_item_data_get(it);
 		tmp = g_hash_table_lookup(properties, "Path");
@@ -968,7 +968,7 @@ _remove_message(const char *path)
 				break;
 			}
 		}
-		it = elm_gen_item_next_get(it);
+		it = elm_genlist_item_next_get(it);
 	}
 }
 
@@ -995,7 +995,7 @@ static void
 _hide_cb(struct View *view)
 {
 	g_debug("_hide_cb");
-	elm_genlist_item_bring_in(elm_gen_first_item_get(
+	elm_genlist_item_bring_in(elm_genlist_first_item_get(
 		((struct MessageListViewData *)view)->list));
 }
 
diff --git a/src/view/sim-manager-view.c b/src/view/sim-manager-view.c
index c4e7f60..c228970 100644
--- a/src/view/sim-manager-view.c
+++ b/src/view/sim-manager-view.c
@@ -296,7 +296,7 @@ _number_add_add_to_sim(GError *error, gpointer pack)
 			D_("Failed to write to SIM."), error);
 	} else {
 		/*
-		elm_gen_clear(view.list_data.list);
+		elm_genlist_clear(view.list_data.list);
 		sim_manager_list_fill(&view.list_data);
 		*/
 		_number_add_pack *cpack = (_number_add_pack *) pack;
@@ -326,11 +326,11 @@ _find_next_free_index(int max_index) {
 
 	for (i = 1; i <= max_index; i++) {
 		found = 0;
-		it = elm_gen_first_item_get(view.list_data.list);
+		it = elm_genlist_first_item_get(view.list_data.list);
 		entry = elm_genlist_item_data_get(it);
 		while (entry) {
 			if (entry->entry->index == i) found = 1;
-			it = elm_gen_item_next_get(it);
+			it = elm_genlist_item_next_get(it);
 			entry = elm_genlist_item_data_get(it);
 		}
 		if (found == 0) {
@@ -582,7 +582,7 @@ _import_all_contacts_cb(GError *error, char *path, void *data)
 	else {
 		cdata->state = 0;
 	}
-	if (it == elm_gen_last_item_get(view.list_data.list)) {
+	if (it == elm_genlist_last_item_get(view.list_data.list)) {
 		g_debug("import finished");
 		loading_indicator_stop();
 		if (view.import_error) {
@@ -646,10 +646,10 @@ _list_import_all_clicked(void *data, Evas_Object * obj, void *event_info)
 
 	loading_indicator_start();
 	view.import_error = EINA_FALSE;
-	it = elm_gen_first_item_get(view.list_data.list);
+	it = elm_genlist_first_item_get(view.list_data.list);
 	while (it) {
 		_import_contact(it, _import_all_contacts_cb);
-		it = elm_gen_item_next_get(it);
+		it = elm_genlist_item_next_get(it);
 	}
 }
 
-- 
1.7.8.rc4

