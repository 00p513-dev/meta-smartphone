From 35669073e8f785acbc11c01faae531b5183ec3ba Mon Sep 17 00:00:00 2001
From: Alistair Buxton <a.j.buxton@gmail.com>
Date: Thu, 1 Sep 2011 15:48:14 +0100
Subject: [PATCH 1/6] Copy u-boot.bin to CONFIG_SYS_TEXT_BASE if chainloading.

When chainloading, u-boot.bin is loaded into RAM by the previous bootloader.
We have no control over where it ends up so we cannot set CONFIG_SYS_TEXT_BASE
in advance. Instead, this patch makes u-boot copy itself from wherever it ends
up, to CONFIG_SYS_TEXT_BASE, and then jumps into the correctly located copy.

Signed-off-by: Alistair Buxton <a.j.buxton@gmail.com>
---
 arch/arm/cpu/armv7/start.S |   19 +++++++++++++++++++
 1 files changed, 19 insertions(+), 0 deletions(-)

diff --git a/arch/arm/cpu/armv7/start.S b/arch/arm/cpu/armv7/start.S
index d91ae12..a41ecce 100644
--- a/arch/arm/cpu/armv7/start.S
+++ b/arch/arm/cpu/armv7/start.S
@@ -119,6 +119,25 @@ IRQ_STACK_START_IN:
  */
 
 reset:
+#if (CONFIG_CHAINLOADER)
+	/* Copy u-boot.bin to TEXT_BASE if it isn't already there. */
+	adr	r0, _start		@ Where u-boot.bin was loaded
+	adr	r2, _start
+	add	r2, r2, #0x40000	@ Load address + 0x40000
+	ldr	r1, _TEXT_BASE		@ Where u-boot.bin needs to be
+	cmp	r0, r1
+	beq	realreset		@ skip if loaded in correct position
+	adr	r11, realreset		@ Build address to jump to in new copy
+	sub	r11, r11, r0		@ Subtract _start
+	add	r11, r11, r1		@ Add _TEXT_BASE
+chaincopy:
+	ldmia	r0!, {r3 - r10}		@ copy from source address [r0]
+	stmia	r1!, {r3 - r10}		@ copy to   target address [r1]
+	cmp	r0, r2			@ until source end address [r2]
+	bne	chaincopy		@ loop until equal
+	mov	pc, r11
+realreset:
+#endif
 	/*
 	 * set the cpu to SVC32 mode
 	 */
-- 
1.7.6.1

