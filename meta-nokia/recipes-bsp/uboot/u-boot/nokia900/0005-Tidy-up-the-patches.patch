From 1915b800ba53a91da9fa358e3605592bc37a59e6 Mon Sep 17 00:00:00 2001
From: Alistair Buxton <a.j.buxton@gmail.com>
Date: Thu, 1 Sep 2011 21:36:28 +0100
Subject: [PATCH 5/6] Tidy up the patches.

Signed-off-by: Alistair Buxton <a.j.buxton@gmail.com>
---
 arch/arm/cpu/armv7/start.S   |   21 ++++++++++++---------
 arch/arm/lib/bootm.c         |   17 +++++------------
 board/nokia/rx51/config.mk   |   33 ---------------------------------
 board/nokia/rx51/rx51.c      |   17 +++++++++--------
 include/configs/nokia_rx51.h |   16 +++++++++-------
 5 files changed, 35 insertions(+), 69 deletions(-)
 delete mode 100644 board/nokia/rx51/config.mk

diff --git a/arch/arm/cpu/armv7/start.S b/arch/arm/cpu/armv7/start.S
index 4e2df58..e1f5924 100644
--- a/arch/arm/cpu/armv7/start.S
+++ b/arch/arm/cpu/armv7/start.S
@@ -82,6 +82,16 @@ _armboot_start:
 	.word _start
 #endif
 
+#ifdef CONFIG_CHAINLOADER
+.globl _INIT_LOADADDR
+_INIT_LOADADDR:
+	.word 0x0badc0de
+
+.globl _INIT_ATAGADDR
+_INIT_ATAGADDR:
+	.word 0x0badc0de
+#endif
+
 /*
  * These are defined in the board-specific linker script.
  */
@@ -123,17 +133,10 @@ reset:
 	/*
 	 * Ugly hack: store the u-boot load address and kernel params from
 	 * previous bootloader.
-	 * 0x82000000: address where this image was loaded
-	 * 0x82000004: mach_type
-	 * 0x82000008: atags address
 	 */
 	adr 	r0, _start		@ Where u-boot.bin was loaded
-	mov 	r3, #0x82000000		@ Dest addr. for saved data
-	str	r0, [r3]
-	add	r3, r3, #4
-	str	r1, [r3]
-	add	r3, r3, #4
-	str	r2, [r3]
+	str	r0, _INIT_LOADADDR
+	str	r2, _INIT_ATAGADDR
 	/* Copy u-boot.bin to TEXT_BASE if it isn't already there. */
 	adr	r0, _start		@ Where u-boot.bin was loaded
 	adr	r2, _start
diff --git a/arch/arm/lib/bootm.c b/arch/arm/lib/bootm.c
index 72ca76b..cf9bd8b 100644
--- a/arch/arm/lib/bootm.c
+++ b/arch/arm/lib/bootm.c
@@ -99,12 +99,6 @@ int do_bootm_linux(int flag, int argc, char *argv[], bootm_headers_t *images)
 	char	*s;
 	int	machid = bd->bi_arch_number;
 	void	(*kernel_entry)(int zero, int arch, uint params);
-#ifdef CONFIG_CHAINLOADER
-	uint	bi_boot_params;
-	#define PARAMS bi_boot_params
-#else
-	#define PARAMS (bd->bi_boot_params)
-#endif
 
 #ifdef CONFIG_CMDLINE_TAG
 	char *commandline = getenv ("bootargs");
@@ -115,8 +109,8 @@ int do_bootm_linux(int flag, int argc, char *argv[], bootm_headers_t *images)
 
 	s = getenv ("machid");
 	if (s) {
-		machid = simple_strtoul (s, NULL, 16);
-		printf ("Using machid 0x%x from environment\n", machid);
+		machid = simple_strtoul(s, NULL, 16);
+		printf("Using machid %#x from environment\n", machid);
 	}
 
 	show_boot_progress (15);
@@ -132,10 +126,10 @@ int do_bootm_linux(int flag, int argc, char *argv[], bootm_headers_t *images)
 	       (ulong) kernel_entry);
 
 #ifdef CONFIG_CHAINLOADER
-	s = getenv ("atags");
+	s = getenv ("atagaddr");
 	if (s) {
-		bi_boot_params = simple_strtoul (s, NULL, 16);
-		printf ("Using existing atags at 0x%x\n", params);
+		bd->bi_boot_params = simple_strtoul(s, NULL, 16);
+		printf("Using existing atags at %#x\n", params);
 	} else {
 #endif
 #if defined (CONFIG_SETUP_MEMORY_TAGS) || \
@@ -163,7 +157,6 @@ int do_bootm_linux(int flag, int argc, char *argv[], bootm_headers_t *images)
 		setup_end_tag(bd);
 #endif
 #ifdef CONFIG_CHAINLOADER
-		bi_boot_params = bd->bi_boot_params;
 	}
 #endif
 
diff --git a/board/nokia/rx51/config.mk b/board/nokia/rx51/config.mk
deleted file mode 100644
index 3477f09..0000000
--- a/board/nokia/rx51/config.mk
+++ /dev/null
@@ -1,33 +0,0 @@
-#
-# (C) Copyright 2006
-# Texas Instruments, <www.ti.com>
-#
-# Nokia N900 uses OMAP3 (ARM-CortexA8) cpu
-# see http://www.ti.com/ for more information on Texas Instruments
-#
-# See file CREDITS for list of people who contributed to this
-# project.
-#
-# This program is free software; you can redistribute it and/or
-# modify it under the terms of the GNU General Public License as
-# published by the Free Software Foundation; either version 2 of
-# the License, or (at your option) any later version.
-#
-# This program is distributed in the hope that it will be useful,
-# but WITHOUT ANY WARRANTY; without even the implied warranty of
-# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-# GNU General Public License for more details.
-#
-# You should have received a copy of the GNU General Public License
-# along with this program; if not, write to the Free Software
-# Foundation, Inc., 59 Temple Place, Suite 330, Boston,
-# MA 02111-1307 USA
-#
-# Physical Address:
-# 8000'0000 (bank0)
-# 8800/0000 (bank1)
-# Linux-Kernel is expected to be at 8000'8000, entry 8000'8000
-# (mem base + reserved)
-
-# For use with external or internal boots.
-CONFIG_SYS_TEXT_BASE = 0x80008000
diff --git a/board/nokia/rx51/rx51.c b/board/nokia/rx51/rx51.c
index 47484d3..5f9f056 100644
--- a/board/nokia/rx51/rx51.c
+++ b/board/nokia/rx51/rx51.c
@@ -44,6 +44,9 @@
 
 GraphicDevice gdev;
 
+extern unsigned int _INIT_LOADADDR;
+extern unsigned int _INIT_ATAGADDR;
+
 /*
  * Routine: board_init
  * Description: Early hardware init.
@@ -86,14 +89,12 @@ int misc_init_r(void)
 #ifdef CONFIG_CHAINLOADER
 	char buf[12];
 	printf("Getting NOLO supplied boot parameters...\n");
-	sprintf(buf, "0x%x", readl(0x82000000));
-	setenv("nolo_loadaddr", buf);
-	sprintf(buf, "0x%x", readl(0x82000000)+0x40000);
-	setenv("nolo_kernaddr", buf);
-	sprintf(buf, "0x%x", readl(0x82000004));
-	setenv("nolo_machtype", buf);
-	sprintf(buf, "0x%x", readl(0x82000008));
-	setenv("nolo_atagaddr", buf);
+	sprintf(buf, "%#x", _INIT_LOADADDR);
+	setenv("init_loadaddr", buf);
+	sprintf(buf, "%#x", _INIT_LOADADDR+0x40000);
+	setenv("init_kernaddr", buf);
+	sprintf(buf, "%#x", _INIT_ATAGADDR);
+	setenv("init_atagaddr", buf);
 #endif
 
 	dieid_num_r();
diff --git a/include/configs/nokia_rx51.h b/include/configs/nokia_rx51.h
index e389f21..8058913 100644
--- a/include/configs/nokia_rx51.h
+++ b/include/configs/nokia_rx51.h
@@ -35,16 +35,21 @@
 /*
  * High Level Configuration Options
  */
+
 #define CONFIG_ARMV7		1	/* This is an ARM V7 CPU core */
 #define CONFIG_OMAP		1	/* in a TI OMAP core */
 #define CONFIG_OMAP34XX		1	/* which is a 34XX */
 #define CONFIG_OMAP3430		1	/* which is in a 3430 */
-#define CONFIG_OMAP3_RX51	1	/* working with RX51 */
 #define CONFIG_CHAINLOADER	1	/* Loaded by NOLO */
 #define CONFIG_L2_OFF		1	/* kernel won't boot if l2 enabled */
 					/* (old u-boot tried but failed to */
 					/*  enable it, due to a bug.)      */
 
+/* It doesn't really matter what we set this to. NOLO will load u-boot.bin
+ * in a random place anyway, and we have to copy.
+ */
+#define CONFIG_SYS_TEXT_BASE    0x80008000
+
 #define CONFIG_SDRC	/* The chip has SDRC controller */
 
 #include <asm/arch/cpu.h>		/* get chip and board defs */
@@ -73,10 +78,8 @@
  * Size of malloc() pool
  */
 #define CONFIG_ENV_SIZE			(128 << 10)	/* 128 KiB */
-						/* Sector */
+							/* Sector */
 #define CONFIG_SYS_MALLOC_LEN		(CONFIG_ENV_SIZE + (128 << 10))
-#define CONFIG_SYS_GBL_DATA_SIZE	128	/* bytes reserved for */
-						/* initial data */
 
 /*
  * Hardware drivers
@@ -199,8 +202,8 @@ int rx51_kp_getc(void);
 		"run meegoargs; " \
 		"bootm ${loadaddr}\0" \
 	"noloboot=echo Booting NOLO supplied kernel ...; " \
-		"setenv atags ${nolo_atagaddr};" \
-		"bootm ${nolo_kernaddr}\0" \
+		"setenv atagaddr ${init_atagaddr};" \
+		"bootm ${init_kernaddr}\0" \
 	"trymmc=if run loadbootscript; then " \
 			"run bootscript; " \
 		"else " \
@@ -280,7 +283,6 @@ int rx51_kp_getc(void);
  */
 #define CONFIG_NR_DRAM_BANKS	2	/* CS1 may or may not be populated */
 #define PHYS_SDRAM_1		OMAP34XX_SDRC_CS0
-#define PHYS_SDRAM_1_SIZE	(32 << 20)	/* at least 32 MiB */
 #define PHYS_SDRAM_2		OMAP34XX_SDRC_CS1
 
 /* SDRAM Bank Allocation method */
-- 
1.7.6.1

