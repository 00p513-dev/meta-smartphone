Quieten kernel output from watchdog events.  As with the battery, the
watchdog produces excessive output so we remove lots of print
statements.

Bob Ham <bob.ham@collabora.com>
Index: git/arch/arm/mach-exynos/sec_watchdog.c
===================================================================
--- git.orig/arch/arm/mach-exynos/sec_watchdog.c
+++ git/arch/arm/mach-exynos/sec_watchdog.c
@@ -69,7 +69,6 @@ static spinlock_t wdt_lock;
 #if defined(PET_BY_WORKQUEUE)
 static void watchdog_workfunc(struct work_struct *work)
 {
-	pr_info("%s kicking...%x\n", __func__, readl(S3C2410_WTCNT));
 	writel(watchdog_reset * TPS, S3C2410_WTCNT);
 	queue_delayed_work_on(0, watchdog_wq, &watchdog_work,
 			      watchdog_pet * HZ);
@@ -77,7 +76,6 @@ static void watchdog_workfunc(struct wor
 #elif defined(PET_BY_DIRECT_TIMER)
 static void pet_watchdog_timer_fn(unsigned long data)
 {
-	pr_info("%s kicking...%x\n", __func__, readl(S3C2410_WTCNT));
 	writel(watchdog_reset * TPS, S3C2410_WTCNT);
 	pet_watchdog_timer.expires += watchdog_pet * HZ;
 	add_timer_on(&pet_watchdog_timer, 0);
@@ -85,7 +83,6 @@ static void pet_watchdog_timer_fn(unsign
 #else
 static enum hrtimer_restart watchdog_timerfunc(struct hrtimer *timer)
 {
-	pr_info("%s kicking...%x\n", __func__, readl(S3C2410_WTCNT));
 	writel(watchdog_reset * TPS, S3C2410_WTCNT);
 	hrtimer_start(&watchdog_timer,
 		      ktime_set(watchdog_pet, 0), HRTIMER_MODE_REL);
